Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clones - when I have in mind to use origin as place I got clone from.
Fork - when I don`t want to push to place I forked, but want to have opportunity to push to my repository.
Branches - its another story, I`ll use it to split development of destinct features on project.

What is the bentfit of havimng a copy of the last known state of the remote stored locally?
It gets opportunity to:
 - diff with local branches and get to know state with remote wherther local branche ahead, behind, up-to-date or out-of-sync;
 - fetch remote state of branch to local tracking branch and then merge it with local branches
 - to track state when saccessfuly pushed

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
 - folder plus email or chats
 - git deffenetly)

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
 - in case of new feature or bug fix, something experimental.
 - in this case pros are: easy and less error prone pull requesting, and cons are: more complicated process of add changes to master(main debelopment branch)
 - in the direct way, its easy to add changes, but errors can become huge problem in team development process
